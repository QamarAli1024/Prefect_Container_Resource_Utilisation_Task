name: Docker ECR Build and Push

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push-prod:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set Short Git SHA
      run: echo "SHORT_SHA=$(echo ${GITHUB_SHA:0:7})" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}  # Set your AWS region

    - name: Login to AWS ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Create ECR Repo
      uses: int128/create-ecr-repository-action@v1
      id: ecr
      with:
        repository: ${{ github.repository }}

    - name: Get ECR Repo Name
      shell: bash
      run:  echo "repo=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}" >> $GITHUB_OUTPUT
      id: repo_name

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap
        docker buildx build -t ${{ steps.repo_name.outputs.repo }}:prod-$SHORT_SHA \
          -t ${{ steps.repo_name.outputs.repo }}:latest \
          -t ${{ steps.repo_name.outputs.repo }}:prod \
          --build-arg PROD_FLAG=1 \
          --cache-to mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:cache \
          --cache-from type=registry,ref=${{ steps.repo_name.outputs.repo }}:cache \
          --push .
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGISTRY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Clean up Docker Buildx
      run: docker buildx rm

  build-and-push-dev:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'dev' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 

    - name: Set Short Git SHA
      run: echo "SHORT_SHA=$(echo ${GITHUB_SHA:0:7})" >> $GITHUB_ENV

    - name: Login to AWS ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Create ECR Repo
      uses: int128/create-ecr-repository-action@v1
      id: ecr
      with:
        repository: ${{ github.repository }}

    - name: Get ECR Repo Name
      shell: bash
      run:  echo "repo=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}" >> $GITHUB_OUTPUT
      id: repo_name

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap
        docker buildx build -t ${{ steps.repo_name.outputs.repo }}:dev-$SHORT_SHA \
          -t ${{ steps.repo_name.outputs.repo }}:latest \
          -t ${{ steps.repo_name.outputs.repo }}:dev \
          --build-arg PROD_FLAG='' \
          --cache-to mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:cache \
          --cache-from type=registry,ref=${{ steps.repo_name.outputs.repo }}:cache \
          --push .
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGISTRY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Clean up Docker Buildx
      run: docker buildx rm